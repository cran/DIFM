// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// B_simulation
arma::mat B_simulation(List attributes, List hyp_parm, arma::mat data, List parm);
RcppExport SEXP _DIFM_B_simulation(SEXP attributesSEXP, SEXP hyp_parmSEXP, SEXP dataSEXP, SEXP parmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type attributes(attributesSEXP);
    Rcpp::traits::input_parameter< List >::type hyp_parm(hyp_parmSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type parm(parmSEXP);
    rcpp_result_gen = Rcpp::wrap(B_simulation(attributes, hyp_parm, data, parm));
    return rcpp_result_gen;
END_RCPP
}
// W_simulation
arma::mat W_simulation(List attributes, List hyp_parm, List parm);
RcppExport SEXP _DIFM_W_simulation(SEXP attributesSEXP, SEXP hyp_parmSEXP, SEXP parmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type attributes(attributesSEXP);
    Rcpp::traits::input_parameter< List >::type hyp_parm(hyp_parmSEXP);
    Rcpp::traits::input_parameter< List >::type parm(parmSEXP);
    rcpp_result_gen = Rcpp::wrap(W_simulation(attributes, hyp_parm, parm));
    return rcpp_result_gen;
END_RCPP
}
// X_simulation
arma::mat X_simulation(List attributes, List parm);
RcppExport SEXP _DIFM_X_simulation(SEXP attributesSEXP, SEXP parmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type attributes(attributesSEXP);
    Rcpp::traits::input_parameter< List >::type parm(parmSEXP);
    rcpp_result_gen = Rcpp::wrap(X_simulation(attributes, parm));
    return rcpp_result_gen;
END_RCPP
}
// marginal_d_cpp
List marginal_d_cpp(arma::mat data, List attributes, List hyp_parm, List Gibbs, int burnin, bool verbose);
RcppExport SEXP _DIFM_marginal_d_cpp(SEXP dataSEXP, SEXP attributesSEXP, SEXP hyp_parmSEXP, SEXP GibbsSEXP, SEXP burninSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type attributes(attributesSEXP);
    Rcpp::traits::input_parameter< List >::type hyp_parm(hyp_parmSEXP);
    Rcpp::traits::input_parameter< List >::type Gibbs(GibbsSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(marginal_d_cpp(data, attributes, hyp_parm, Gibbs, burnin, verbose));
    return rcpp_result_gen;
END_RCPP
}
// sigma2_simulation
arma::vec sigma2_simulation(List attributes, List hyp_parm, arma::mat data, List parm);
RcppExport SEXP _DIFM_sigma2_simulation(SEXP attributesSEXP, SEXP hyp_parmSEXP, SEXP dataSEXP, SEXP parmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type attributes(attributesSEXP);
    Rcpp::traits::input_parameter< List >::type hyp_parm(hyp_parmSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type parm(parmSEXP);
    rcpp_result_gen = Rcpp::wrap(sigma2_simulation(attributes, hyp_parm, data, parm));
    return rcpp_result_gen;
END_RCPP
}
// tau_simulation
arma::vec tau_simulation(List attributes, List hyp_parm, List parm);
RcppExport SEXP _DIFM_tau_simulation(SEXP attributesSEXP, SEXP hyp_parmSEXP, SEXP parmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type attributes(attributesSEXP);
    Rcpp::traits::input_parameter< List >::type hyp_parm(hyp_parmSEXP);
    Rcpp::traits::input_parameter< List >::type parm(parmSEXP);
    rcpp_result_gen = Rcpp::wrap(tau_simulation(attributes, hyp_parm, parm));
    return rcpp_result_gen;
END_RCPP
}
// theta_simulation
arma::mat theta_simulation(List attributes, List hyp_parm, arma::mat data, List parm);
RcppExport SEXP _DIFM_theta_simulation(SEXP attributesSEXP, SEXP hyp_parmSEXP, SEXP dataSEXP, SEXP parmSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type attributes(attributesSEXP);
    Rcpp::traits::input_parameter< List >::type hyp_parm(hyp_parmSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type data(dataSEXP);
    Rcpp::traits::input_parameter< List >::type parm(parmSEXP);
    rcpp_result_gen = Rcpp::wrap(theta_simulation(attributes, hyp_parm, data, parm));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DIFM_B_simulation", (DL_FUNC) &_DIFM_B_simulation, 4},
    {"_DIFM_W_simulation", (DL_FUNC) &_DIFM_W_simulation, 3},
    {"_DIFM_X_simulation", (DL_FUNC) &_DIFM_X_simulation, 2},
    {"_DIFM_marginal_d_cpp", (DL_FUNC) &_DIFM_marginal_d_cpp, 6},
    {"_DIFM_sigma2_simulation", (DL_FUNC) &_DIFM_sigma2_simulation, 4},
    {"_DIFM_tau_simulation", (DL_FUNC) &_DIFM_tau_simulation, 3},
    {"_DIFM_theta_simulation", (DL_FUNC) &_DIFM_theta_simulation, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_DIFM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
